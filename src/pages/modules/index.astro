---
export const prerender = true;
import PageLayout from "@layouts/PageLayout.astro";
import { Icon } from "astro-icon";

const modules = await Astro.glob("../../../../MultiQC/docs/modules/**/*.md");
---

<PageLayout
  title={"Supported Tools"}
  subtitle={`MultiQC currently has modules to support ${modules.length} different bioinformatics tools, listed below.`}
>
  <div class="mb-4 flex items-center">
    <Icon name="mdi:cursor-default-click" class="mr-2 h-7 w-7 text-gray-500" />
    <p class="typo-blockquote">
      Click the tool name to go to the MultiQC documentation for that tool.
    </p>
  </div>
  <p class="mb-8">
    Missing something? If you would like another tool to to be support, please
    <a
      class="underline underline-offset-4 hover:no-underline"
      href="https://github.com/ewels/MultiQC/issues/new?labels=module%3A+new&template=module-request.yml"
    >
      open an issue
    </a>.
  </p>
  <form method="get">
    <label for="filter" class="text-gray-500 dark:text-gray-300 md:ml-2">Search for a tool:</label>
    <div class="relative inline-block w-full whitespace-nowrap sm:w-96">
      <input
        id="filter"
        name="filter"
        type="text"
        class="peer my-3 inline-block w-full rounded-sm border-gray-300 bg-black/5 p-3 shadow-sm outline-0 focus:border-blue-500/20 focus:ring focus:ring-blue-500/20 focus:ring-opacity-50 dark:bg-black/20 sm:mx-3"
        placeholder="Tool name, description or keyword"
      />
      <button
        id="clear_filter"
        class="absolute right-0 top-6 inline-block h-6 w-6 p-0.5 text-gray-300 opacity-0 peer-focus:opacity-100 peer-active:opacity-100"
      >
        <Icon name="mdi:close-circle" />
      </button>
    </div>
    <div class="flex flex-col">
      <div class="grid-cols-4 lg:grid">
        <div class="typo-intro bg-gray-200 px-4 py-2 dark:bg-zinc-700 lg:hidden">Tool</div>
        <div class="typo-intro hidden bg-gray-200 px-4 py-2 dark:bg-zinc-700 lg:block">
          Tool Name
        </div>
        <div class="typo-intro col-span-3 hidden bg-gray-200 px-4 py-2 dark:bg-zinc-700 lg:block">
          Description
        </div>
      </div>
      {
        modules &&
          modules.map((module) => (
            <div class="module-row grid-cols-4 lg:grid">
              <div class="flex items-center border-gray-200 px-4 pb-0 pt-2 dark:border-gray-700 lg:border-b lg:pb-2">
                <a
                  href={"/modules/" + module.file.split("/").pop().replace(".md", "")}
                  class="typo-body text-blue-600 dark:text-blue-400"
                >
                  {module.frontmatter.name}
                </a>
              </div>
              <div class="col-span-3 flex items-center border-b border-gray-200 px-4 pb-3 text-gray-600 dark:border-gray-700 dark:text-gray-300 lg:py-2">
                {module.frontmatter.description}
              </div>
            </div>
          ))
      }
    </div>
  </form>

  <script client:load>
    // Filter the table based on the search input
    // Modified from https://stackoverflow.com/a/51187875/713980
    const filterModules = (val) => {
      // Update the URL
      window.history.replaceState(null, null, "/modules/" + (val === "" ? "" : "?filter=" + val));
      // Filter the table
      const rows = document.querySelectorAll(".module-row");
      const regex = new RegExp(val, "i");
      const isFoundInRow = (row) => regex.test(row.innerHTML);
      const isFound = (childrenArr) => childrenArr.some(isFoundInRow);
      const setRowStyleDisplay = ({ style, children }) => {
        style.display = isFound([
          ...children, // <-- All children
        ])
          ? ""
          : "none";
      };
      rows.forEach(setRowStyleDisplay);
    };
    // Filter on page load
    const filter_input = document.querySelector("#filter");
    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.has("filter")) {
      const filter_get = urlParams.get("filter");
      filterModules(filter_get);
      filter_input.value = filter_get;
    }

    // Listener for typing in the filter input
    filter_input.addEventListener("keyup", function () {
      filterModules(filter_input.value);
    });
    // Listener for clearing the filter input
    const clearFilter = document.querySelector("#clear_filter");
    clearFilter.addEventListener("click", function (e) {
      filter_input.value = "";
      filterModules("");
      e.preventDefault();
    });
  </script>
</PageLayout>
