---
export interface Props {
  section: {
    slug: string;
    frontmatter: {
      title: string;
      order: number;
    };
  };
  current_page: string;
}
const { section, current_page } = Astro.props;

const all_docs = await Astro.glob("../../../MultiQC/docs/core/**/*.md");
const pages = [];
Object.values(section)[0].forEach((filename) => {
  var url = "/docs/" + filename.replace(/\.md$/, "").replace(/index$/, "");
  var filtered = all_docs.filter(function (el) {
    return el.file.endsWith("docs/core/" + filename);
  });
  pages.push([url, filtered[0]]);
});
---

<ul class="">
  {
    pages.map((page) => (
      <li class="ml-1 text-gray-600 ">
        <a
          href={page[0]}
          class:list={[
            "block hover:text-black border-l-2 hover:border-gray-300 dark:hover:text-gray-400 dark:hover:border-white border-gray-200 pl-2 py-0.5 text-xs",
            {
              "font-semibold border-l-blue-600 hover:border-l-blue-600 text-blue-600 hover:text-blue-600 dark:border-l-blue-400 dark:hover:border-l-blue-400 dark:text-blue-400/80 dark:hover:text-blue-400/80":
                current_page == page[0],
            },
          ]}
        >
          {page[1].frontmatter.title}
        </a>
      </li>
    ))
  }
</ul>
