---
import DarkModeToggle from "@components/DarkModeToggle.svelte";
import { Icon } from "astro-icon";
import Logo from "/logos/multiqc_logo_darkbg.svg";

const location = Astro.url;

export interface Props {
  navbarItems: {
    text: string;
    slug: string;
  }[];
}

const { navbarItems } = Astro.props;
---

<script>
  const logos = document.getElementsByClassName("logo");
  if (matchMedia("(pointer:fine)").matches) {
    for (const logo of logos) {
      logo.addEventListener("contextmenu", (event) => {
        event.preventDefault();
        window.location.href = "/logos";
      });
    }
  }
</script>
<div class="container-lg hidden h-24 w-full flex-wrap items-center justify-between lg:flex">
  <a href="/" class="block">
    <img
      src={Logo}
      class:list={["logo h-8 lg:h-10", { hidden: location.pathname === "/" }]}
      alt="MultiQC logo"
    />
  </a>
  <div class="hidden items-center lg:flex">
    {
      navbarItems.map((page) => (
        <a
          href={page.slug}
          class:list={[
            "mx-2 mr-px rounded-sm bg-black bg-opacity-0 py-1 px-4 font-body font-light tracking-wide hover:text-white",
            {
              "text-gray-300":
                (!location.pathname.includes(page.slug) && page.slug !== "/") ||
                (page.slug === "/" && location.pathname !== "/"),
              "bg-opacity-30 text-white hover:bg-opacity-50":
                (location.pathname.includes(page.slug) && page.slug !== "/") ||
                (page.slug === "/" && location.pathname === "/"),
            },
          ]}
        >
          {page.text}
        </a>
      ))
    }
    <DarkModeToggle client:load>
      <Icon name="ph:moon-bold" class="mr-1 inline h-4 w-4 text-gray-600 dark:text-gray-300" />
      <Icon name="ph:sun-bold" class="inline h-4 w-4 dark:text-gray-600 text-gray-300" />
    </DarkModeToggle>
  </div>
</div>
