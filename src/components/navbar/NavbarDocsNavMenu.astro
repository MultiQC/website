---
// Fetch the config.yml that has section titles and order of pages
import docs_nav from "@src/config.yaml";

const sections: {
  section: Record<string, string[]>;
  pages: [string, { file: string; frontmatter: { title: string } }];
}[] = [];
const all_docs = await Astro.glob("../../../../MultiQC/docs/core/**/*.{md,mdx}");
docs_nav["nav"].forEach((section) => {
  let pages = [];
  console.log("section:", section);
  Object.values(section)[0].forEach((filename) => {
    console.log(filename);
    var url = "/docs/" + filename.replace(/\.(md|mdx)$/, "").replace(/index$/, "");
    var filtered = all_docs.filter(function (el) {
      return el.file.endsWith("docs/core/" + filename);
    });
    console.log(filtered);
    pages.push([url, filtered[0]]);
  });
  // console.log("section:", section[Object.keys(section)])
  sections.push({ section: section, pages: pages });
});
console.log(sections);
console.log(all_docs.map((doc) => doc.file));
---

{
  sections &&
    sections.map((section) => (
      <section class="mb-6">
        <h5 class="mb-2 font-semibold">{Object.keys(section.section)[0]}</h5>
        <ul class="">
          {section.pages.map((page) => (
            <li class="ml-1 text-gray-400">
              <a
                href={page[0]}
                class:list={[
                  "block",
                  "border-l-2",
                  "border-gray-700",
                  "hover:text-blue-600",
                  "hover:border-blue-600",
                  "pl-2",
                  "py-0.5",
                  "text-xs",
                  {
                    "border-l-blue-600 font-semibold text-blue-600 hover:border-l-blue-600 hover:text-blue-600":
                      Astro.url.pathname == page[0],
                  },
                ]}
              >
                {page[1].frontmatter.title}
              </a>
            </li>
          ))}
        </ul>
      </section>
    ))
}
